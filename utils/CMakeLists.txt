file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/utils)
file(GLOB utils_src "src/*.c")
foreach(src ${utils_src})
	string(REGEX REPLACE ".*/src/(.*).c" "\\1" util ${src})
	list(APPEND c_utils ${util})
	
	add_executable(${util} ${src})
	target_link_libraries(${util} GSL::gsl GSL::gslcblas)
	target_link_libraries(${util} m ${OpenMP_C_LIBRARIES})
	target_sources(${util} PUBLIC $<TARGET_OBJECTS:utils.o>)
	set_target_properties(${util} PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)
endforeach(src)

# Add specific object libraries for different utilities
target_sources(merge PUBLIC $<TARGET_OBJECTS:utils.o> $<TARGET_OBJECTS:detector.o> $<TARGET_OBJECTS:dataset.o> $<TARGET_OBJECTS:interp.o> $<TARGET_OBJECTS:quat.o> $<TARGET_OBJECTS:iterate.o>)
target_sources(expected PUBLIC $<TARGET_OBJECTS:utils.o> $<TARGET_OBJECTS:detector.o> $<TARGET_OBJECTS:dataset.o> $<TARGET_OBJECTS:interp.o> $<TARGET_OBJECTS:quat.o> $<TARGET_OBJECTS:iterate.o>)
target_sources(heterogen PUBLIC $<TARGET_OBJECTS:utils.o> $<TARGET_OBJECTS:detector.o> $<TARGET_OBJECTS:dataset.o> $<TARGET_OBJECTS:interp.o> $<TARGET_OBJECTS:quat.o> $<TARGET_OBJECTS:params.o> $<TARGET_OBJECTS:iterate.o>)
target_sources(cosmic PUBLIC $<TARGET_OBJECTS:utils.o> $<TARGET_OBJECTS:detector.o> $<TARGET_OBJECTS:dataset.o>)
target_sources(make_data PUBLIC $<TARGET_OBJECTS:utils.o> $<TARGET_OBJECTS:detector.o> $<TARGET_OBJECTS:interp.o>)
target_sources(fiberize PUBLIC $<TARGET_OBJECTS:detector.o> $<TARGET_OBJECTS:interp.o>)
target_sources(compare PUBLIC $<TARGET_OBJECTS:utils.o> $<TARGET_OBJECTS:quat.o> $<TARGET_OBJECTS:interp.o>)
target_sources(make_quaternion PUBLIC $<TARGET_OBJECTS:quat.o>)
target_sources(hkli PUBLIC $<TARGET_OBJECTS:utils.o>)
if(HDF5_FOUND)
	set(h5_utils merge cosmic make_data fiberize expected heterogen compare)
	foreach(util ${h5_utils})
		target_link_libraries(${util} ${HDF5_C_LIBRARIES})
		if(HDF5_IS_PARALLEL)
			target_link_libraries(${util} ${MPI_LIBRARIES})
			if (MPI_COMPILE_FLAGS)
				set_target_properties(${util} PROPERTIES COMPILE_FLAGS "${MPI_COMPILE_FLAGS}")
			endif(MPI_COMPILE_FLAGS)
			if (MPI_LINK_FLAGS)
				set_target_properties(${util} PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
			endif(MPI_LINK_FLAGS)
		endif(HDF5_IS_PARALLEL)
	endforeach()
endif()

# Install C and Python utilities
file(GLOB py_utils "*.py")
file(GLOB convert_utils "convert/*.py")
file(GLOB py_src "py_src/*.py" "py_src/style.css")
install(TARGETS ${c_utils} DESTINATION dragonfly/utils)
install(PROGRAMS ${py_utils} DESTINATION dragonfly/utils)
install(PROGRAMS ${convert_utils} DESTINATION dragonfly/utils/convert)
install(FILES ${py_src} DESTINATION dragonfly/utils/py_src)

install(CODE "MESSAGE(\"============================================================\")")
install(CODE "MESSAGE(\"Finished installation. Add the following to your profile file:\")")
install(CODE "MESSAGE(\"export PATH=${CMAKE_INSTALL_PREFIX}/dragonfly/bin:$PATH\")")
install(CODE "MESSAGE(\"============================================================\")")
